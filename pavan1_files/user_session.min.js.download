let store={};function getDeviceDetails(userAgentString,uaParser){uaParser.setUA(userAgentString);const uaResult=uaParser.getResult();let device=uaResult.os.name??"Unknown OS";if(uaResult.os.version){device+=" "+uaResult.os.version;}
if(uaResult.browser.name){device+=" - "+uaResult.browser.name;}
return device;}
async function sendDeleteRequest(payload,type){if(window.tp.pianoId.getToken()==null){resetSessionLimit();return;}
await fetch(us_api_domain+"usersessions",{method:"POST",headers:{"X-Client-Auth":window.tp.pianoId.getToken(),},body:JSON.stringify({session_ids:payload,type,}),}).then((res)=>{if(res.ok)resetSessionLimit();}).then((data)=>console.log(data));}
function resetSessionLimit(){store.session_limit_exceeded=false;store.device_info=[];}
window?.tp?.push(["init",function(){if(window.tp.pianoId.isUserValid()){requirejs(["ua-parser"],function(UAParser){const uaParser=new UAParser("user-agent");store=PetiteVue.reactive({device_info:[],session_limit_exceeded:false,});const DeviceInfoComponent=(props)=>({$template:"#device-info",ind:props.index,device:props.device,la:props.la,});async function initUserSessionCheck(){if(window.tp.pianoId.getToken()!=null)
await fetch(us_api_domain+"usersessions",{headers:{"X-Client-Auth":window.tp.pianoId.getToken(),},}).then((res)=>{if(res.status===401){return res.json();}
return"valid-session";}).then((data)=>{if(data==="valid-session")return[];else{data.map((di)=>{const key=Object.keys(di)[0];const val=Object.values(di)[0];store.device_info.push({device:getDeviceDetails(val.split(":")[1],uaParser),la:new Date(parseInt(key.split(":")[1])).toDateString(),key:val.split(":")[0],id:key,payload:{id:key,key:val.split(":")[0]},});});store.session_limit_exceeded=true;const userDetails=window?.tp?.pianoId?.getUser();uaParser.setUA(navigator?.userAgent);const uaResult=uaParser.getResult();let device=uaResult.device?uaResult.device?.vendor+" - "+uaResult.device?.model:uaResult.os?.name;if(!device){device="Unknown OS";}
if(uaResult.os?.version){device+=" "+uaResult.os.version;}
window?.dataLayer?.push({event:"userLoginBlocked",data:{registeredEmailId:userDetails.email,uid:userDetails.uid,platform:DevIdf?.isMobile?"mweb":"desktop",device:DevIdf?.isMobile?device:"Desktop",browser:uaResult.browser.name,},});}}).catch((err)=>{console.log("Error for session action...");console.log(err);});}
PetiteVue.createApp({$delimiters:["${","}"],DeviceInfoComponent,}).mount("#user-session-popup");setTimeout(()=>{initUserSessionCheck();},1500);});}},]);